/** @jsx React.DOM */

var d = React.DOM

var DropDown = module.exports = React.createClass({
  displayName: 'DropDown',
  getDefaultProps: function () {
    return {
      action: function () {throw 'override'},
      items: [],
      selected: null
    }
  },
  getInitialState: function () {
    return {
      open: false
    }
  },
  onClose: function (e) {
    this.setState({open: false})
    window.removeEventListener('mousedown', this.onClose)
    if (e && e.preventDefault) {
      e.preventDefault()
      e.stopPropagation()
      return false
    }
  },
  toggleOpen: function () {
    var open = !this.state.open
    this.setState({open: open})
    if (open) {
      window.addEventListener('mousedown', this.onClose)
    }
  },
  selitem: function () {
    for (var i=0; i<this.props.items.length; i++) {
      if (this.props.items[i][1] === this.props.selected) {
        return this.props.items[i]
      }
    }
    return this.props.items[0]
  },
  onChange: function (value) {
    this.onClose()
    this.props.onChange(value)
  },
  mouseDown: function (e) {
    e.stopPropagation()
  },
  render: function () {
    var selitem = this.selitem()
      , onChange = this.onChange
    return (
      <div onMouseDown={this.mouseDown} className={'dropdown' + (this.state.open ? ' dropdown--open' : '')}>
        <div className='dropdown__main' onClick={this.toggleOpen}>
          {selitem[0]}
        </div>
        <ul className='dropdown__list'>
          {
            this.props.items.map(function (item) {
              if (item[1] === selitem[1]) return
              return <li className='dropdown__item' key={item[1]} onClick={onChange.bind(null, item[1])}>{item[0]}</li>
            })
          }
        </ul>
      </div>
    )
  }
})

// vim: set tabstop=2 shiftwidth=2 expandtab:

